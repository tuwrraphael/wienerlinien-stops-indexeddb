const t=t=>t*(Math.PI/180),e=t=>t/(Math.PI/180),n=6371.01,o=Math.PI/2,s=-o,r=Math.PI,a=-r,i=2*Math.PI;const l="https://www.data.wien.gv.at/txt/wrlinien-gtfs-stops.txt",c=6048e5;class p{constructor(t){this.dbName=t}async import(t){const e=(await fetch(l)).body.pipeThrough(new TextDecoderStream);await function(t,e){return new Promise((n,o)=>{let s="",r=!1,a={stop_id:0,stop_name:0,stop_lat:0,stop_lon:0},i=Object.keys(a).length;const l=new WritableStream({write(t){let n=[],o=!1,l=(s+=t).replace(/\r/g,"").split("\n");l.map(t=>{let e=Array.from(function*(t,e){let n=t.split(e),o="";for(let t of n)'"'==(t=o+t)[0]?'"'==t[t.length-1]&&(t.length<=2||'"'!=t[t.length-2])?(yield t.substring(1,t.length-1),o=""):o+=t:(yield t,o="");o.length&&(yield o)}(t,","));if(!r||s.length<2){for(let t in a)a.hasOwnProperty(t)&&(a[t]=e.indexOf(t));r=!0}r&&e.length>=i?n.push({stop_id:e[a.stop_id],stop_name:e[a.stop_name],stop_lat:parseFloat(e[a.stop_lat]),stop_lon:parseFloat(e[a.stop_lon])}):o=!0}),s=o?l[l.length-1]:"",n.length&&e(n)},close:function(){n()},abort:function(){o()}});t.pipeTo(l)})}(e,t)}query(l,c,p){const[u,h,d,g]=function(l,c,p){l=t(l),c=t(c);let u,h,d,g=p/n,f=l-g,b=l+g;return f>s&&b<o?((u=c-(d=Math.asin(Math.sin(g)/Math.cos(l))))<a&&(u+=i),(h=c+d)>r&&(h-=i)):(f=Math.max(f,s),b=Math.min(b,o),u=a,h=r),[e(f),e(u),e(b),e(h)]}(l,c,p/1e3);return new Promise((t,e)=>{let n=IDBKeyRange.bound(u,d),o=IDBKeyRange.bound(h,g);this.openDb().then(s=>{let r=s.transaction("Stops").objectStore("Stops"),a=[],i=[],l=r.index("stop_lat").getAllKeys(n),c=r.index("stop_lon").getAllKeys(o);function p(){let n=s.transaction("Stops").objectStore("Stops"),o=[];i.forEach(s=>{let r=n.get(s);r.onsuccess=()=>{o.push(r.result),o.length==i.length&&t(o)},r.onerror=t=>e(t)})}l.onsuccess=()=>{a.length&&(i=l.result.filter(t=>a.indexOf(t)>-1),p()),a=l.result},l.onerror=t=>e(t),c.onsuccess=()=>{a.length&&(i=c.result.filter(t=>a.indexOf(t)>-1),p()),a=c.result},c.onerror=t=>e(t)},t=>e(t))})}queryByName(t){return new Promise((e,n)=>{this.openDb().then(o=>{let s=o.transaction("Stops").objectStore("Stops").openCursor(),r=[];s.onsuccess=function(){var n=s.result;n?(-1!==n.value.stop_name.indexOf(t)&&r.push(n.value),n.continue()):e(r)},s.onerror=t=>n(t)})})}openDb(){let t=this;return new Promise((e,n)=>{let o=window.indexedDB.open(t.dbName,2);o.onsuccess=function(){e(o.result)},o.onupgradeneeded=function(t){if(t.oldVersion<2){let t=o.result.createObjectStore("Stops",{keyPath:"stop_id"});t.createIndex("stop_lat","stop_lat",{unique:!1}),t.createIndex("stop_lon","stop_lon",{unique:!1}),t.createIndex("version",["version"],{unique:!1}),o.result.createObjectStore("Logs",{keyPath:"id"})}},o.onerror=function(t){n(t)}})}getLogEntry(){return new Promise((t,e)=>{this.openDb().then(n=>{let o=n.transaction("Logs").objectStore("Logs").get(0);o.onsuccess=()=>t(o.result||{version:0,updated:0}),o.onerror=t=>e(t)},t=>e(t))})}async maintainDb(){let t=await this.openDb(),e=await this.getLogEntry();if(+new Date-e.updated<c)return;e.version++,await this.import((function(n){let o=t.transaction("Stops","readwrite").objectStore("Stops");for(let t of n)o.put(Object.assign(Object.assign({},t),{version:e.version}))}));let n=t.transaction("Stops","readwrite"),o=n.objectStore("Stops");var s=o.index("version").openKeyCursor(IDBKeyRange.only(e.version-1));s.onsuccess=function(){var t=s.result;t&&(o.delete(t.primaryKey),t.continue)},(n=t.transaction("Logs","readwrite")).objectStore("Logs").put({id:0,updated:+new Date,version:e.version})}}function u([e,o],[s,r]){var a=t(s-e),i=t(r-o),l=Math.sin(a/2)*Math.sin(a/2)+Math.cos(t(e))*Math.cos(t(s))*Math.sin(i/2)*Math.sin(i/2),c=2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l));return n*c}function h(t,e,n){return t.map(t=>({stop:t,d:u([t.stop_lat,t.stop_lon],[e,n])})).sort((t,e)=>t.d-e.d).map(t=>t.stop)}export{p as StopStore,h as orderStopsByDistance};
//# sourceMappingURL=index.js.map
